diff --git a/node_modules/@lerna/publish/command.js b/node_modules/@lerna/publish/command.js
index 814efaa..853a3d8 100644
--- a/node_modules/@lerna/publish/command.js
+++ b/node_modules/@lerna/publish/command.js
@@ -110,6 +110,11 @@ exports.builder = yargs => {
       hidden: true,
       type: "boolean",
     },
+    "summary-file": {
+      // Json output.
+      hidden: true,
+      type: "string",
+    },
     // y: {
     //   describe: "Skip all confirmation prompts.",
     //   alias: "yes",
diff --git a/node_modules/@lerna/publish/index.js b/node_modules/@lerna/publish/index.js
index 0780128..68b4d1c 100644
--- a/node_modules/@lerna/publish/index.js
+++ b/node_modules/@lerna/publish/index.js
@@ -1,6 +1,7 @@
 "use strict";
 
 const os = require("os");
+const fs = require("fs");
 const path = require("path");
 const crypto = require("crypto");
 const pFinally = require("p-finally");
@@ -243,6 +244,27 @@ class PublishCommand extends Command {
       output("Successfully published:");
       output(message.join(os.EOL));
 
+      if (this.options.summaryFile) {
+        // create a json object and output it to a file location.
+        const filePath = this.options.summaryFile || "./output.json";
+        const jsonObject = this.packagesToPublish.map((pkg) => {
+          return {
+            packageName: pkg.name,
+            version: pkg.version,
+          };
+        });
+        output(jsonObject);
+        try {
+          fs.writeFileSync(filePath, JSON.stringify(jsonObject));
+          output("Locate Summary Report Here: ", filePath);
+        } catch (error) {
+          output("Failed to create the summary report", error);
+        }
+      } else {
+        const message = this.packagesToPublish.map((pkg) => ` - ${pkg.name}@${pkg.version}`);
+        output(message.join(os.EOL));
+      }
+
       this.logger.success("published", "%d %s", count, count === 1 ? "package" : "packages");
     });
   }
